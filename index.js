import express from "express"
import bodyParser from "body-parser"
import pg from "pg"
import multer from "multer"
import 'core-js/modules/es.string.replace.js'
import axios from "axios";
import fs from "fs"
import cors from "cors"
import nearbySort from 'nearby-sort';
import users from './MOCK_DATA .json' assert { type: 'json'}
import {Client} from "@googlemaps/google-maps-services-js";
const client = new Client({});
const app = express();
const port =3000;
const api_key = "AIzaSyA4IGQAa3lWLh2jy1gRqEjybQ5aAqVDKcg";
const api_url ="https://maps.googleapis.com/maps/api/distancematrix/json";

const db = new pg.Client({
    user: "postgres",
    host: "localhost",
    database: "carpool",
    password: "1234",
    port: 4000,
});
db.connect();
const upload = multer({ storage: multer.memoryStorage() })

app.use(bodyParser.urlencoded({extended: true}));
app.use(cors({ origin: 'http://192.168.29.39:8081/' }));
// const user = [
//     {
//         id: 1,
//         first_name:"Aditya",
//         last_name:"Raj",
//         email:"aditya0405raj@gmail.com",
//         phone:"7484827755",
//         photo:"",
//         latitude:"23°19'00.4\"N",
//         longitude:"85°23'44.0\"E"
//     }
// ];

app.get("/", async (req,res)=>{
    res.render("index.ejs");


    client
        .distancematrix({
            params: {
                destinations: [{ lat: 27.1751, lng: 78.0421 }],
                origins:[{lat: 21.8380, lng: 73.7191}],
                key: api_key,
            },
            timeout: 1000, // milliseconds
        })
        .then((r) => {
            console.log(r.data.rows[0].elements);
        })
        .catch((e) => {
            console.log(e.response.data.error_message);
        });

    // try {
    //     //
    //     // const result = await db.query("SELECT * FROM passenger ORDER BY id ASC");
    //     // console.log(result.rows);
    //
    //     res.redirect("/");
    // } catch (err) {
    //     console.log(err);
    // }
});
app.post("/login", async (req,res)=>{
const first_name = req.body.firstname;
const last_name = req.body.lastname;
const email = req.body.email;
const phone = req.body.phone;
const photo =req.body.photo;
const latitude = parseFloat(req.body.latitude);
const longitude = parseFloat(req.body.longitude);
console.log(req.body);
await db.query("INSERT INTO users (first_name,last_name,email,phone,photo,latitude,longitude) VALUES ($1,$2,$3,$4,$5,$6,$7)",[first_name,last_name,email,phone,photo,latitude,longitude]);
return res.json({success:true});
});
app.get("/users", async (req,res)=>{
    const latitude = req.body.latitude;
    const longitude = req.body.longitude;
    const input = {
        lat:56.7,
        long: 72.8,
    };

    console.log(latitude);
    console.log(longitude);
    let ascSortedData = await nearbySort(input, users);
    console.log(ascSortedData);
    return res.json(ascSortedData);
});
app.get("/users/:id", (req, res) => {

    const id = req.params.id;
    const user = users.find((user)=>user.id==id);
return res.json(user);
});
app.patch("/users/:id", (req, res) => {
   const id =req.params.id;
   const user = users.find((user)=>user.id==id);
const latitude = req.body.latitude;
const longitude = req.body.longitude;
user.latitude = latitude;
user.longitude = longitude;
console.log(user);
console.log(latitude);
console.log(longitude);
return res.json({success:true});
});
// req.file.buffer.toString('base64')
app.post('/submit', upload.single('image'), async function (req, res, next) {
    await db.query("INSERT INTO passenger (first_name,last_name,email,phone,photo,latitude,longitude) VALUES ($1,$2,$3,$4,$5,$6,$7)",[req.body.first_name,req.body.last_name,req.body.email,req.body.phone,req.file.buffer.toString('base64'),req.body.latitude,req.body.longitude]);
})
app.listen(port,"0.0.0.0",()=>{
    console.log(`SERVER is running at http://localhost:${port}`);
});