const a=(a,t,o,n)=>{const e=r(o-a),s=r(n-t),h=Math.sin(e/2)*Math.sin(e/2)+Math.cos(r(a))*Math.cos(r(o))*Math.sin(s/2)*Math.sin(s/2);return 2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h))*6371},r=a=>a*(Math.PI/180),t=async({lat:r,long:t},o,n=!0)=>await new Promise((e,s)=>{try{((a,r,t,o)=>{if(isNaN(parseFloat(a))||isNaN(parseFloat(r))||!t)throw new Error("Invalid arguments");if("number"!=typeof a||"number"!=typeof r)throw new Error("lat and long should be numbers");if(!Array.isArray(t))throw new Error("Second argument should be an array");if("boolean"!=typeof o)throw new Error("Asc argument should be a boolean")})(r,t,o,n),e(o.sort((o,e)=>{const s=a(r,t,o.lat,o.long),h=a(r,t,e.lat,e.long);return n?s-h:h-s}))}catch(a){s(a)}});export{t as default};
//# sourceMappingURL=sort.modern.js.map
